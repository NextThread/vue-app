{"remainingRequest":"/Users/binarybeast/vue-app/vue-weather-app/node_modules/babel-loader/lib/index.js!/Users/binarybeast/vue-app/vue-weather-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/binarybeast/vue-app/vue-weather-app/src/store/store.js","dependencies":[{"path":"/Users/binarybeast/vue-app/vue-weather-app/src/store/store.js","mtime":1676892585413},{"path":"/Users/binarybeast/vue-app/vue-weather-app/node_modules/cache-loader/dist/cjs.js","mtime":1676891657039},{"path":"/Users/binarybeast/vue-app/vue-weather-app/node_modules/babel-loader/lib/index.js","mtime":1676891657792},{"path":"/Users/binarybeast/vue-app/vue-weather-app/node_modules/eslint-loader/index.js","mtime":1676891653025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9iaW5hcnliZWFzdC92dWUtYXBwL3Z1ZS13ZWF0aGVyLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2JpbmFyeWJlYXN0L3Z1ZS1hcHAvdnVlLXdlYXRoZXItYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Cgp2YXIgX211dGF0aW9uczsKCmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFZ1ZXggZnJvbSAidnVleCI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7ClZ1ZS51c2UoVnVleCk7CnZhciBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgYXBpQmFzZTogImh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS8iLAogICAgYXBpS2V5OiAiNTgzOTBlZGI4YmY3YjYzNWQyNjhiMjE4ZjM3YmZmMWEiLAogICAgLy8gQ3JlYXRlIEFwaSBLZXkgZnJvbSBodHRwczovL29wZW53ZWF0aGVybWFwLm9yZwogICAgZGVmYXVsdFNlYXJjaDogImFnYXJ0YWxhIiwKICAgIHNlYXJjaDogIiIsCiAgICBpc0Vycm9yOiBmYWxzZSwKICAgIHdlYXRoZXJEYXRhOiB7fQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0V2VhdGhlck1haW46IGZ1bmN0aW9uIGdldFdlYXRoZXJNYWluKHN0YXRlKSB7CiAgICAgIHZhciBfc3RhdGUkd2VhdGhlckRhdGEgPSBzdGF0ZS53ZWF0aGVyRGF0YSwKICAgICAgICAgIHRlbXAgPSBfc3RhdGUkd2VhdGhlckRhdGEudGVtcCwKICAgICAgICAgIGZlZWxzTGlrZSA9IF9zdGF0ZSR3ZWF0aGVyRGF0YS5mZWVsc0xpa2UsCiAgICAgICAgICBkZXNjcmlwdGlvbiA9IF9zdGF0ZSR3ZWF0aGVyRGF0YS5kZXNjcmlwdGlvbiwKICAgICAgICAgIGljb24gPSBfc3RhdGUkd2VhdGhlckRhdGEuaWNvbiwKICAgICAgICAgIGluZm8gPSBfc3RhdGUkd2VhdGhlckRhdGEuaW5mbzsKICAgICAgcmV0dXJuIHsKICAgICAgICB0ZW1wOiB0ZW1wLAogICAgICAgIGZlZWxzTGlrZTogZmVlbHNMaWtlLAogICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbiwKICAgICAgICBpbmZvOiBpbmZvLAogICAgICAgIGljb246IGljb24KICAgICAgfTsKICAgIH0sCiAgICBnZXRXZWF0aGVySW5mbzogZnVuY3Rpb24gZ2V0V2VhdGhlckluZm8oc3RhdGUpIHsKICAgICAgdmFyIF9zdGF0ZSR3ZWF0aGVyRGF0YTIgPSBzdGF0ZS53ZWF0aGVyRGF0YSwKICAgICAgICAgIHdpbmQgPSBfc3RhdGUkd2VhdGhlckRhdGEyLndpbmQsCiAgICAgICAgICBjbG91ZHMgPSBfc3RhdGUkd2VhdGhlckRhdGEyLmNsb3VkcywKICAgICAgICAgIGh1bWlkaXR5ID0gX3N0YXRlJHdlYXRoZXJEYXRhMi5odW1pZGl0eTsKICAgICAgcmV0dXJuIHsKICAgICAgICB3aW5kOiB3aW5kLAogICAgICAgIGNsb3VkczogY2xvdWRzLAogICAgICAgIGh1bWlkaXR5OiBodW1pZGl0eQogICAgICB9OwogICAgfSwKICAgIGdldFdlYXRoZXJDb3VudHJ5OiBmdW5jdGlvbiBnZXRXZWF0aGVyQ291bnRyeShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUud2VhdGhlckRhdGEuY291bnRyeTsKICAgIH0sCiAgICBpc1NlYXJjaGVkOiBmdW5jdGlvbiBpc1NlYXJjaGVkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zZWFyY2ggIT09ICIiOwogICAgfSwKICAgIGdldEVycm9yOiBmdW5jdGlvbiBnZXRFcnJvcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuaXNFcnJvcjsKICAgIH0KICB9LAogIG11dGF0aW9uczogKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsICJTRVRfU0VBUkNIIiwgZnVuY3Rpb24gU0VUX1NFQVJDSChzdGF0ZSwgc2VhcmNoKSB7CiAgICBzdGF0ZS5zZWFyY2ggPSBzZWFyY2gudG9Mb3dlckNhc2UoKTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsICJTRVRfV0VBVEhFUl9EQVRBIiwgZnVuY3Rpb24gU0VUX1dFQVRIRVJfREFUQShzdGF0ZSwgZGF0YSkgewogICAgc3RhdGUud2VhdGhlckRhdGEgPSBkYXRhOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgIlNFVF9FUlJPUiIsIGZ1bmN0aW9uIFNFVF9FUlJPUihzdGF0ZSwgdmFsdWUpIHsKICAgIHN0YXRlLmlzRXJyb3IgPSB2YWx1ZTsKICB9KSwgX211dGF0aW9ucyksCiAgYWN0aW9uczogewogICAgZmV0Y2hXZWF0aGVyRGF0YTogZnVuY3Rpb24gZmV0Y2hXZWF0aGVyRGF0YShfcmVmLCBzZWFyY2gpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBzdGF0ZSwgcmVzcG9uc2UsIG5ld1dlYXRoZXJEYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBzdGF0ZSA9IF9yZWYuc3RhdGU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIGNvbW1pdCgiU0VUX1NFQVJDSCIsIHNlYXJjaCk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoIiIuY29uY2F0KHN0YXRlLmFwaUJhc2UsICJ3ZWF0aGVyP3E9IikuY29uY2F0KHNlYXJjaCwgIiZ1bml0cz1tZXRyaWMmQVBQSUQ9IikuY29uY2F0KHN0YXRlLmFwaUtleSkpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBuZXdXZWF0aGVyRGF0YSA9IHsKICAgICAgICAgICAgICAgICAgbmFtZTogcmVzcG9uc2UuZGF0YS5uYW1lLAogICAgICAgICAgICAgICAgICB0ZW1wOiByZXNwb25zZS5kYXRhLm1haW4udGVtcCwKICAgICAgICAgICAgICAgICAgdGVtcE1pbjogcmVzcG9uc2UuZGF0YS5tYWluLnRlbXBfbWluLAogICAgICAgICAgICAgICAgICB0ZW1wTWF4OiByZXNwb25zZS5kYXRhLm1haW4udGVtcF9tYXgsCiAgICAgICAgICAgICAgICAgIGZlZWxzTGlrZTogcmVzcG9uc2UuZGF0YS5tYWluLmZlZWxzX2xpa2UsCiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiByZXNwb25zZS5kYXRhLndlYXRoZXJbMF0uZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgIGljb246IHJlc3BvbnNlLmRhdGEud2VhdGhlclswXS5pY29uLnN1YnN0cmluZygwLCAyKSwKICAgICAgICAgICAgICAgICAgaW5mbzogcmVzcG9uc2UuZGF0YS53ZWF0aGVyWzBdLm1haW4sCiAgICAgICAgICAgICAgICAgIHdpbmQ6IHJlc3BvbnNlLmRhdGEud2luZC5zcGVlZCwKICAgICAgICAgICAgICAgICAgaHVtaWRpdHk6IHJlc3BvbnNlLmRhdGEubWFpbi5odW1pZGl0eSwKICAgICAgICAgICAgICAgICAgY2xvdWRzOiByZXNwb25zZS5kYXRhLmNsb3Vkcy5hbGwsCiAgICAgICAgICAgICAgICAgIGNvdW50cnk6IHJlc3BvbnNlLmRhdGEuc3lzLmNvdW50cnkKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9XRUFUSEVSX0RBVEEiLCBuZXdXZWF0aGVyRGF0YSk7CiAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9FUlJPUiIsIGZhbHNlKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgiU0VUX0VSUk9SIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9XRUFUSEVSX0RBVEEiLCB7fSk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn0pOwpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["/Users/binarybeast/vue-app/vue-weather-app/src/store/store.js"],"names":["Vue","Vuex","axios","use","store","Store","state","apiBase","apiKey","defaultSearch","search","isError","weatherData","getters","getWeatherMain","temp","feelsLike","description","icon","info","getWeatherInfo","wind","clouds","humidity","getWeatherCountry","country","isSearched","getError","mutations","toLowerCase","data","value","actions","fetchWeatherData","commit","get","response","newWeatherData","name","main","tempMin","temp_min","tempMax","temp_max","feels_like","weather","substring","speed","all","sys","console","log"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nVue.use(Vuex);\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    apiBase: \"https://api.openweathermap.org/data/2.5/\",\r\n    apiKey: \"58390edb8bf7b635d268b218f37bff1a\",   // Create Api Key from https://openweathermap.org\r\n    defaultSearch: \"agartala\",\r\n    search: \"\",\r\n    isError: false,\r\n    weatherData: {},\r\n  },\r\n  getters: {\r\n    getWeatherMain(state) {\r\n      const { temp, feelsLike, description, icon, info } = state.weatherData;\r\n      return {\r\n        temp,\r\n        feelsLike,\r\n        description,\r\n        info,\r\n        icon,\r\n      };\r\n    },\r\n    getWeatherInfo(state) {\r\n      const { wind, clouds, humidity } = state.weatherData;\r\n      return {\r\n        wind,\r\n        clouds,\r\n        humidity,\r\n      };\r\n    },\r\n    getWeatherCountry(state) {\r\n      return state.weatherData.country;\r\n    },\r\n    isSearched(state) {\r\n      return state.search !== \"\";\r\n    },\r\n    getError(state) {\r\n      return state.isError;\r\n    },\r\n  },\r\n  mutations: {\r\n    [\"SET_SEARCH\"](state, search) {\r\n      state.search = search.toLowerCase();\r\n    },\r\n    [\"SET_WEATHER_DATA\"](state, data) {\r\n      state.weatherData = data;\r\n    },\r\n    [\"SET_ERROR\"](state, value) {\r\n      state.isError = value;\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchWeatherData({ commit, state }, search) {\r\n      try {\r\n        commit(\"SET_SEARCH\", search);\r\n        const response = await axios.get(\r\n          `${state.apiBase}weather?q=${search}&units=metric&APPID=${state.apiKey}`\r\n        );\r\n        const newWeatherData = {\r\n          name: response.data.name,\r\n          temp: response.data.main.temp,\r\n          tempMin: response.data.main.temp_min,\r\n          tempMax: response.data.main.temp_max,\r\n          feelsLike: response.data.main.feels_like,\r\n          description: response.data.weather[0].description,\r\n          icon: response.data.weather[0].icon.substring(0, 2),\r\n          info: response.data.weather[0].main,\r\n          wind: response.data.wind.speed,\r\n          humidity: response.data.main.humidity,\r\n          clouds: response.data.clouds.all,\r\n          country: response.data.sys.country,\r\n        };\r\n        commit(\"SET_WEATHER_DATA\", newWeatherData);\r\n        commit(\"SET_ERROR\", false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        commit(\"SET_ERROR\", true);\r\n        commit(\"SET_WEATHER_DATA\", {});\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default store;\r\n"]}]}